<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--NavigationViewItem-->
    <Style x:Key="CustomNavigationViewItem" TargetType="NavigationViewItem">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NavigationViewItem">
                    <Grid
                            x:Name="LayoutRoot"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            Control.IsTemplateFocusTarget="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver" />
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed" />
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushSelected}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver" />
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushSelectedPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed" />
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushSelectedPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushCheckedDisabled}" />
                                        <Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="IconVisible" />
                                <VisualState x:Name="IconCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <!--<Setter Target="IconColumn.Width" Value="16" />-->
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Rectangle x:Name="SelectionIndicator"
                                    Width="4"
                                    Height="48"
                                    Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                    Opacity="0.0"/>
                        </Grid>
                        <Border x:Name="RevealBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Grid Height="50" HorizontalAlignment="Left" x:Name="ContentGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="IconColumn" Width="48" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Viewbox x:Name="IconBox" Child="{TemplateBinding Icon}" Margin="16,12"/>

                            <ContentPresenter x:Name="ContentPresenter"
                                    Grid.Column="1"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"/>

                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="ToolTip"/>
                            </ToolTipService.ToolTip>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--NavigationView-->
    <Style x:Key="CustomNavigationView" TargetType="NavigationView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NavigationView">
                    <Grid x:Name="RootGrid">
                        <Grid HorizontalAlignment="Left" Margin="0,0,0,8" VerticalAlignment="Top" Canvas.ZIndex="100">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="TogglePaneTopPadding"/>
                            <Button x:Name="TogglePaneButton" AutomationProperties.LandmarkType="Navigation" Grid.Row="1" Height="48" Width="48" Background="Transparent" BorderThickness="0" Style="{ThemeResource ButtonRevealStyle}">
                                <SymbolIcon x:Name="HamburgerIcon" Symbol="GlobalNavigationButton"/>
                            </Button>
                        </Grid>
                        <SplitView x:Name="RootSplitView" DisplayMode="Overlay" CompactPaneLength="48" IsTabStop="False" IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenPaneLength="{TemplateBinding OpenPaneLength}" PaneBackground="{StaticResource NavigationViewExpandedPaneBackground}">
                            <SplitView.Pane>
                                <Grid x:Name="PaneContentGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="48"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition x:Name="PaneSettingsBottomRow" Height="8"/>
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="AutoSuggestArea" Height="50" Grid.Row="2" VerticalAlignment="Center">
                                        <ContentControl x:Name="PaneAutoSuggestBoxPresenter" Content="{TemplateBinding AutoSuggestBox}" HorizontalContentAlignment="Stretch" IsTabStop="False" Margin="12,0,12,0" VerticalContentAlignment="Center" Visibility="Visible"/>
                                        <Button x:Name="PaneAutoSuggestButton" Style="{ThemeResource ButtonRevealStyle}" Height="48" Width="48" Background="Transparent" BorderThickness="0" Visibility="Collapsed">
                                            <SymbolIcon x:Name="AutoSuggestIcon" Symbol="Find">
                                                <SymbolIcon.RenderTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" CenterX="10" CenterY="10"></ScaleTransform>
                                                </SymbolIcon.RenderTransform>
                                            </SymbolIcon>
                                        </Button>
                                    </Grid>
                                    <NavigationViewList x:Name="MenuItemsHost" ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}" ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}" ItemTemplate="{TemplateBinding MenuItemTemplate}" IsItemClickEnabled="True" ItemsSource="{TemplateBinding MenuItemsSource}" ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}" Margin="0,0,0,20" Grid.Row="3" SelectionMode="Single" SelectedItem="{TemplateBinding SelectedItem}"/>
                                    <Border x:Name="FooterContentBorder" Child="{TemplateBinding PaneFooter}" Grid.Row="4"/>
                                    <NavigationViewItemSeparator x:Name="SettingsItemSeparator" Margin="-5 -11" Grid.Row="4"/>
                                    <NavigationViewItem Style="{StaticResource CustomNavigationViewItem}" Content="Settings" Tag="SettingsPage" x:Name="SettingsNavPaneItem" Grid.Row="5">
                                        <NavigationViewItem.Icon>
                                            <SymbolIcon Symbol="Setting"/>
                                        </NavigationViewItem.Icon>
                                    </NavigationViewItem>
                                </Grid>
                            </SplitView.Pane>
                            <Grid x:Name="ContentGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="90"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ContentControl x:Name="HeaderContent" Grid.Row="0" Margin="22,0,0,0" FontSize="34" FontFamily="Segoe UI" FontWeight="Light" Content="{TemplateBinding Header}" HorizontalContentAlignment="Left" IsTabStop="False" VerticalContentAlignment="Bottom"/>
                                <ContentPresenter Content="{TemplateBinding Content}" Grid.Row="1"/>
                            </Grid>
                        </SplitView>

                        <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState x:Name="ultrawide">
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="1008"/>
                                        </VisualState.StateTriggers>

                                        <VisualState.Setters>
                                            <Setter Target="RootSplitView.PaneBackground" Value="#2b2b2b"/>
                                        </VisualState.Setters>
                                    </VisualState>

                                    <VisualState x:Name="wide">
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="641"/>
                                        </VisualState.StateTriggers>

                                        <VisualState.Setters>
                                            <Setter Target="RootSplitView.PaneBackground" Value="LightBlue"/>
                                        </VisualState.Setters>
                                    </VisualState>

                                    <VisualState x:Name="narrow">
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="0"/>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="RootSplitView.PaneBackground" Value="Green"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
